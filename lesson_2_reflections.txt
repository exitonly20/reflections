What happens when you initialize a repository?
Why do you need to do it?

	1) ".git" file is added in directory
	2) there is NOT an automatic initial commit during initialization
	3) existing files are "Untracked files" and can be seen using "git status"

How is the staging area different from the 
working directory and the repository? 
What value do you think it offers?

	Staging area allows multiple files to grouped together
	that are logically part of the same solution.

How can you use the staging area to make sure 
you have one commit per logical change?

	Steps:
	1. Add files using "git add <filename1> <filename2> ..."
	2. Use "git diff --staged" to see differences between production
	and the files that are in the staging area

What are some situations when branches would be 
helpful in keeping your history organized? 
How would branches help?

	Keep work organized so can switch to something else.
	Keep work organized when working with others. Multiple
	people can make fixes without stuff changing, then they
	can merge branches later.
	Keep work organized when must make bug fix before going
	back to new feature.

How do the diagrams help you visualize the branch structure?

	The question explains itself.
	The diagrams help because the branch structure can
	be visualized.

What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?

	Result of merging 2 branches is all changes are combined.
	
What are the pros and cons 
of Git’s automatic merging vs. always doing merges manually?

	Automatic merging does everything except when
	there is a conflict. At that point, Auto becomes
	Manual merging.
